<%if (isImplementation) { boolean hasOCL = false;%>
  <%for (Iterator i=genClass.getImplementedGenOperations().iterator(); i.hasNext();) {
    GenOperation genOperation = (GenOperation) i.next();
	String body = null;
	EAnnotation ocl = genOperation.getEcoreOperation().getEAnnotation(oclNsURI);
	if (ocl != null) body = (String) ocl.getDetails().get("body");
	if (body != null) { hasOCL = true;%>
	/**
	 * The parsed OCL expression for the body of the '{@link #<%=genOperation.getName()%> <em><%=genOperation.getFormattedName()%></em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #<%=genOperation.getName()%>
	 * @generated
	 */
	private static <%=genModel.getImportedName("org.eclipse.emf.ocl.expressions.OCLExpression")%> <%=genOperation.getName()%>BodyOCL;
	
    <%}
    
	String invariant = null;
	if (ocl != null) invariant = (String) ocl.getDetails().get("invariant");
	if (invariant != null) { hasOCL = true;%>
	/**
	 * The parsed OCL expression for the definition of the '{@link #<%=genOperation.getName()%> <em><%=genOperation.getFormattedName()%></em>}' invariant constraint.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #<%=genOperation.getName()%>
	 * @generated
	 */
	private static <%=genModel.getImportedName("org.eclipse.emf.ocl.expressions.OCLExpression")%> <%=genOperation.getName()%>InvOCL;
	
    <%}
    }
    
  for (Iterator i=genClass.getImplementedGenFeatures().iterator(); i.hasNext();) {
    GenFeature genFeature = (GenFeature) i.next();
	String derive = null;
	EAnnotation ocl = genFeature.getEcoreFeature().getEAnnotation(oclNsURI);
	if (ocl != null) derive = (String) ocl.getDetails().get("derive");
	if (derive != null) { hasOCL = true;%>
	/**
	 * The parsed OCL expression for the derivation of '{@link #<%=genFeature.getGetAccessor()%> <em><%=genFeature.getFormattedName()%></em>}' property.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #<%=genFeature.getGetAccessor()%>
	 * @generated
	 */
	private static <%=genModel.getImportedName("org.eclipse.emf.ocl.expressions.OCLExpression")%> <%=genFeature.getSafeName()%>DeriveOCL;
	
    <%}
    }
    
  if (hasOCL) { %>
	private static final String OCL_ANNOTATION_SOURCE = "<%=oclNsURI%>";<%=genModel.getNonNLS()%>
	
  <% }
}%>
